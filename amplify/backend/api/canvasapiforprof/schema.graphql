type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type Students @model {
  id: ID!
  name: String
  year: Int
  credits: Int
  grades: Int
  courses: CourseByProf @connection
}
type Profile @model {
  id: ID!
  name: String!
  accountType: String!
  description: String!
  # Refrence the S3Object  type from a field.
  file: S3Object
}

type Meeting
  @model
  @auth(
    rules: [
      {
        allow: owner
        queries: [get, list]
        mutations: [create, update, delete]
      }
    ]
  ) {
  id: ID!
  meetingsubject: String
  meetingtime: String
}

type CourseByProf
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["Admin"]
        queries: [get, list]
        mutations: [create, update, delete]
      }
      {
        allow: owner
        queries: [get, list]
        mutations: [create, update, delete]
      }
    ]
  )
  @searchable {
  id: ID!

  creator: String
  category: String
  coursename: String
  coursedescription: String
  studentsenrolled: String
  labels: [String]
  studentsincourse: Students @connection

  # Refrence the S3Object  type from a field.
  file: S3Object
}
